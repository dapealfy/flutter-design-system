---
image:
  name: asia.gcr.io/amartha-dev/amartha/bitbucket-android-flutter-genymotion:1.13
  username: _json_key
  password: "$GCR_DEV_JSON_KEY"

definitions:
  caches:
    flutter-pub-cache: $PUB_CACHE
  steps:
    - step: &analyze-test
        name: Run tests
        script:
          - cd catalog && flutter pub get
          - cd .. && flutter pub get
          - flutter analyze
          - flutter test

    - step: &prepare-build
        name: Prepare build
        caches:
          - flutter-pub-cache
        script:
          - cd catalog
          - flutter pub get

    - step: &build-web-catalog
        name: Build catalog
        caches:
          - flutter-pub-cache
        script:
          - export APP_VERSION_NAME=$(awk '/version:/ { split($2, arr, "+"); print arr[1]; }' pubspec.yaml)
          - cd catalog
          - flutter build web --release --web-renderer canvaskit --build-name=${APP_VERSION_NAME}
        artifacts:
          - catalog/build/web/**

    - step: &build-apk-catalog
        name: Build APK catalog
        caches:
          - flutter-pub-cache
        script:
          - export APP_VERSION_NAME=$(awk '/version:/ { split($2, arr, "+"); print arr[1]; }' pubspec.yaml)
          - cd catalog
          - flutter build apk --release --build-name=${APP_VERSION_NAME}
        artifacts:
          - catalog/build/app/outputs/flutter-apk/app-release.apk

    - step: &deploy-catalog-main
        name: Deploy catalog main
        script:
          - cd catalog
          - curl -sL https://firebase.tools | bash
          - echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/firebase-service-account.json
          - export GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json
          - firebase deploy --only hosting --non-interactive

    - step: &deploy-catalog-preview
        name: Deploy catalog preview
        script:
          - cd catalog
          - curl -sL https://firebase.tools | bash
          - echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/firebase-service-account.json
          - export GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json
          - ./scripts/deploy_hosting_preview.sh

    - step: &distribute-apk
        name: Distribute apk to firebase
        script:
          - cd catalog/build/app/outputs/flutter-apk/
          - curl -sL https://firebase.tools | bash
          - echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/firebase-service-account.json
          - export GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json
          - firebase appdistribution:distribute app-release.apk --app 1:272130137531:android:5839788c41f2e388ee389e --groups "flutter-design-system"

    - step: &create-tag-if-not-exists
        name: Create tag if not exists
        script:
          - export APP_VERSION_NAME=$(awk '/version:/ { split($2, arr, "+"); print arr[1]; }' pubspec.yaml)
          - export TAG_COUNT=$(git ls-remote --tags origin|awk "/${APP_VERSION_NAME}$/ {c++} END{print c}")
          - |
            if [ "$TAG_COUNT" -gt 0 ]; then
              echo "Tag ${APP_VERSION_NAME} already exists"
              exit 0
            fi
          - export LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          - git tag -am "${LAST_COMMIT_MESSAGE}" ${APP_VERSION_NAME}
          - git push origin ${APP_VERSION_NAME}

clone:
  depth: full

pipelines:
  branches:
    master:
      - step: *create-tag-if-not-exists
      - step: *analyze-test
      - step: *prepare-build
      - parallel:
        - step: *build-web-catalog
        - step: *build-apk-catalog
      - parallel:
        - step: *deploy-catalog-main
        - step: *distribute-apk

  pull-requests:
    '{feature/*,bugfix/*}':
        - step: *analyze-test
        - step: *build-web-catalog
        - step: *deploy-catalog-preview

  custom:
    distribute-apk:
      - step: *prepare-build
      - step: *build-apk-catalog
      - step: *distribute-apk
    deploy-web:
      - step: *analyze-test
      - step: *prepare-build
      - step: *build-web-catalog
      - step: *deploy-catalog-main
